extern struct Book;
extern char **genres;

//Описание: ввод данных новой книги
//Возврат: указатель на книгу
Book *inputBook(void);

//Описание: ввод названия книги
//Возврат: указатель на первый символ строки
char *setTitleOfBook(void);

//Описание: ввод информации об авторе книги
//Возврат: указатель на первый символ строки
char *setAuthorOfBook(void);

//Описание: ввод жанра книги
//Возврат: указатель на первый символ строки
char *setGenreOfBook(void);

//Описание: ввод количества авторских листов книги
//Возврат: количество авторских листов книги
int setPageCtOfBook(void);

//Описание: инициализирует массив жанров
void genresInitialization(void);

//Описание: поиск количества жанров в массиве жанров
//Возврат: количество жанров
int genresCt(void);

//Описание: ввод нового жанра книги
//Возврат: указатель на первый символ строки
char *inputGenre(void);

//Описание: добавление жанра в массив жанров
void addGenres(char *genre);

//Описание: вывод шапки таблицы на экран
void printHeadOfTable(void);

//Описание: закрывает таблицу
void endPrintOfTable(void);

//Описание: ввод массива указателей на книги
//Возврат: указатель на адрес первой книги
Book **inputBooks();

//Описание: поиск количества книг в массиве указателей на книги
//Возврат: количество книг в массиве указателей на книги
int getBooksCt(Book **books);

//Описание: вывод массива указателей на книги на экран
void printBooks(Book **books);

//Описание: формирование результирующего массива указателей на книги на экран
//Возврат: указатель на адрес первой книги результирующего массива
Book **findBooks(Book **books1, char* genre, char* author);

//Описание: проверка, удовлетворяет ли книга критериям поиска
//Возврат: (1/0)
int isBookCorrect(Book *book, char *genre, char *author);

//Описание: формирование результирующих данных
//Возврат: указатель на адрес первой книги результирующего массива
Book **computeBooks(Book **books1);

#ifndef _BOOK_
#define _BOOK_
#include "book.cpp"
#endif
